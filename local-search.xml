<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Regex.ai – 让 AI 帮你写正则表达式｜再也不用学习正则了</title>
    <link href="/2023/03/30/2/"/>
    <url>/2023/03/30/2/</url>
    
    <content type="html"><![CDATA[<h1 id="Regex-ai-–-让-AI-帮你写正则表达式｜再也不用学习正则了"><a href="#Regex-ai-–-让-AI-帮你写正则表达式｜再也不用学习正则了" class="headerlink" title="Regex.ai – 让 AI 帮你写正则表达式｜再也不用学习正则了"></a>Regex.ai – 让 AI 帮你写正则表达式｜再也不用学习正则了</h1><p>Regex.ai 是一款所见即所得的，基于 AI 的正则表达式自动生成工具，只需要选择出数据，它就能帮你写正则表达式，并提供多种提取数据的方式。再也不用学习正则了。</p><h3 id="第一代：看教程"><a href="#第一代：看教程" class="headerlink" title="第一代：看教程"></a>第一代：看教程</h3><p><img src="http://qiniu.version.ga/%E6%88%AA%E5%B1%8F2023-03-30%2001.30.54.png"><br>这是什么鬼？看不懂！</p><h3 id="第二代：搜例子"><a href="#第二代：搜例子" class="headerlink" title="第二代：搜例子"></a>第二代：搜例子</h3><p><img src="http://qiniu.version.ga/%E6%88%AA%E5%B1%8F2023-03-30%2001.36.56.png"><br>这里子不合适啊，摔！<br>如果恰好能找到需要的例子，直接用就好。如果找不到…</p><h3 id="第三代：在线测试"><a href="#第三代：在线测试" class="headerlink" title="第三代：在线测试"></a>第三代：在线测试</h3><p><img src="http://qiniu.version.ga/%E6%88%AA%E5%B1%8F2023-03-30%2001.37.16.png"><br>有了前两代的经验，使用在线工具，就能自己验证有效性了。<br>对于调试正则表达式，还是非常方便的。<br>当然，你还是需要有正则表达式才行。</p><h3 id="第四代：AI-时代"><a href="#第四代：AI-时代" class="headerlink" title="第四代：AI 时代"></a>第四代：AI 时代</h3><p><img src="http://qiniu.version.ga/%E6%88%AA%E5%B1%8F2023-03-30%2001.37.16.png"><br>虽然，已经足够方便的了，但不够直观呀。</p><h3 id="第四代半：Regex-ai"><a href="#第四代半：Regex-ai" class="headerlink" title="第四代半：Regex.ai"></a>第四代半：Regex.ai</h3><p>同样基于 AI 技术，Regex.ai 相比于 ChatGPT 更加直观，不再需要用语言描述，而是直接选择你想要获取的部分，就自动完成了。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=654290029&bvid=BV1uY4y1D7LP&cid=1074882074&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h3 id="获取使用"><a href="#获取使用" class="headerlink" title="获取使用"></a>获取使用</h3><ul><li><a href="https://kutt.appinn.com/kuULSe">Regex.ai 官网</a></li></ul><h2 id="最后，什么是正则表达式"><a href="#最后，什么是正则表达式" class="headerlink" title="最后，什么是正则表达式"></a>最后，什么是正则表达式</h2><p>正则表达式就是一种用来匹配字符的表达式，它可以帮助我们找到一些特定的规律，比如一段文本中的所有电话号码、电子邮件地址等等。</p><p>我们可以把正则表达式看成一个很厉害的筛子，筛子里头有很多孔，我们可以根据我们想要的规律去挑选不同的孔来筛选出我们想要的信息。</p><p>比如，如果我们想要找出一段文字中的所有电子邮箱地址，我们就可以在筛子里头挑选出能够匹配邮箱地址的那些孔，然后把这个筛子放在文本上面筛一遍，就可以找出所有符合条件的电子邮箱地址了。</p><p>当然，正则表达式不止可以用来匹配电子邮箱地址，还可以用来匹配电话号码、网址、日期等等各种形式的信息。因此，正则表达式是程序员们在处理文本数据的时候非常实用的工具，可以帮助我们更快地找出我们想要的信息</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用 Cloudflare Workers 创建免OpenAI域名接口(免VPN)</title>
    <link href="/2023/03/28/%E4%BD%BF%E7%94%A8%20Cloudflare%20Workers%20%E5%88%9B%E5%BB%BA%E5%85%8DOpenAI%E5%9F%9F%E5%90%8D%E6%8E%A5%E5%8F%A3(%E5%85%8DVPN)/"/>
    <url>/2023/03/28/%E4%BD%BF%E7%94%A8%20Cloudflare%20Workers%20%E5%88%9B%E5%BB%BA%E5%85%8DOpenAI%E5%9F%9F%E5%90%8D%E6%8E%A5%E5%8F%A3(%E5%85%8DVPN)/</url>
    
    <content type="html"><![CDATA[<h1 id="使用-Cloudflare-Workers-创建免OpenAI域名接口-免VPN"><a href="#使用-Cloudflare-Workers-创建免OpenAI域名接口-免VPN" class="headerlink" title="使用 Cloudflare Workers 创建免OpenAI域名接口(免VPN)"></a>使用 Cloudflare Workers 创建免OpenAI域名接口(免VPN)</h1><h3 id="1-创建一个-Cloudflare-Worker"><a href="#1-创建一个-Cloudflare-Worker" class="headerlink" title="1.创建一个 Cloudflare Worker"></a>1.创建一个 Cloudflare Worker</h3><p>登录到 Cloudflare 的管理界面后，点击侧边栏的 “Workers” 选项，然后点击“Create a Service” 创建一个 Worker。<br><img src="https://qiniu.version.ga/222871270-d973e2bd-74f9-4efa-b080-e665903a7bac.png"></p><p>然后在创建界面中输入 “Service name” 后点击 “Create Service” 按钮新建 Worker。“Select a starter” 项先不用管。<br><img src="https://qiniu.version.ga/222871439-4ac253c6-d87f-434e-a8e8-3d05c652217d.png"><br>至此 Cloudflare 的 Worker 便创建好了，下面开始修改 Worker 的代码，使其能代理 OpenAI 的 API。</p><h3 id="2-修改-Cloudflare-Worker-的代码"><a href="#2-修改-Cloudflare-Worker-的代码" class="headerlink" title="2.修改 Cloudflare Worker 的代码"></a>2.修改 Cloudflare Worker 的代码</h3><p>在 Worker 的管理界面，点击右上角的 “Quick Edit” 按钮编辑代码 Worker 的代码。<br><img src="https://qiniu.version.ga/222871710-c1d4834e-3bb4-49cf-a9dd-b7dcee258112.png"></p><p>在左侧的代码编辑器中，删除现有的所有代码，然后复制粘贴以下内容到代码编辑器：<br>简化后的代码来自 <a href="https://github.com/x-dr/chatgptProxyAPI">https://github.com/x-dr/chatgptProxyAPI</a></p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs qml"><span class="hljs-keyword">const</span> TELEGRAPH_URL = <span class="hljs-string">&#x27;https://api.openai.com&#x27;</span>;<br><br>addEventListener(<span class="hljs-string">&#x27;fetch&#x27;</span>, event =&gt; &#123;<br>  event.respondWith(handleRequest(event.request))<br>&#125;)<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleRequest</span>(<span class="hljs-params">request</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-built_in">url</span> = <span class="hljs-keyword">new</span> URL(request.url);<br>  <span class="hljs-built_in">url</span>.host = TELEGRAPH_URL.replace(<span class="hljs-regexp">/^https?:\/\//</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br><br>  <span class="hljs-keyword">const</span> modifiedRequest = <span class="hljs-keyword">new</span> Request(<span class="hljs-built_in">url</span>.toString(), &#123;<br>    <span class="hljs-attribute">headers</span>: request.headers,<br>    <span class="hljs-attribute">method</span>: request.method,<br>    <span class="hljs-attribute">body</span>: request.body,<br>    <span class="hljs-attribute">redirect</span>: <span class="hljs-string">&#x27;follow&#x27;</span><br>  &#125;);<br><br>  <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> fetch(modifiedRequest);<br>  <span class="hljs-keyword">const</span> modifiedResponse = <span class="hljs-keyword">new</span> Response(response.body, response);<br><br>  <span class="hljs-comment">// 添加允许跨域访问的响应头</span><br>  modifiedResponse.headers.set(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>);<br><br>  <span class="hljs-keyword">return</span> modifiedResponse;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后点击编辑器右下角的 “Save and deploy” 按钮部署该代码，在弹出的对话框中继续选择 “Save and deploy” 确认部署。</p><p><img src="https://qiniu.version.ga/222872146-bf4c8f30-307a-4511-9be6-8c19db5cab43.png"></p><p>至此，便可以使用该 worker 的地址来代替 OpenAI 的 API 地址了。比如想要请求 ChatGPT 的 API 时，把官方文档中的 <a href="https://api.openai.com/v1/chat/completions">https://api.openai.com/v1/chat/completions</a> 替换成 <a href="https://openai.workers.dev/">https://openai.workers.dev</a> 即可（注意这个地址并不存在，是需要换成自己刚刚创建的 Worker 的地址）。</p><p>但是你可能会发现，这样做了依然还是没有解决问题，因为 Cloudflare Workers 的 workers.dev 域名也是被 GFW 认证过的🥲。但是好在只是认证了 workers.dev 域名，而 ip 还是幸存的状态，所以我们可以给 Worker 绑定一个自己的域名。</p><h3 id="3-绑定域名"><a href="#3-绑定域名" class="headerlink" title="3.绑定域名"></a>3.绑定域名</h3><p>在 Cloudflare Workers 的管理界面中，点击 “Triggers” 选项卡，然后点击 “Custom Domians” 中的 “Add Custom Domain” 按钮以绑定域名。<br><img src="https://qiniu.version.ga/222872491-026600f5-c04c-49c5-9fdf-4d4abb0b66f7.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/28/hello-world/"/>
    <url>/2023/03/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
